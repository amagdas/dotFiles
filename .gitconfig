[user]
  name = Adrian Magdas
  email = adrian.magdas@klarna.com

[color]
  branch = auto
  diff = auto
  status = auto
  ui = true

[color "branch"]
  current = red reverse
  local = blue
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[alias]
  st = status -s
  cl = clone
  ci = commit
  cm = commit -m
  cma = commit -a -m
  ca = commit --amend
  amend = commit --amend
  caa = commit -a --amend -C HEAD
  filelog = log -u
  fl = log -u

  ai = add --interactive

  co = checkout
  bd = branch -D
  br = !git branch --sort=-committerdate | nl | less
    #"!git branch -ra | grep -v done"
  bra = branch -ra
    #list commands
  le = log --oneline --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  lc  = "!f() { git ll "$1"^.."$1"; }; f"
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
    #list all aliases
  la = "!git config -l | grep alias | cut -c 7-"
  diff = diff --word-diff
  d = diff --word-diff
  dc = diff --cached
    #list modified files in last commit
  dl = "!git ll -1"
    #diff last commit
  dlc = diff --cached HEAD^
  dr  = "!f() { git diff "$1"^.."$1"; }; f"
  diffr  = "!f() { git diff "$1"^.."$1"; }; f"

  #reset commands
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard

    #git svn
  svnr = svn rebase
  svnd = svn dcommit
  svnl = svn log --oneline --show-commit

    #stash
  sl = stash list
  sa = stash apply
  ss = stash save

  cp = cherry-pick
  grep = grep -Ii
  gr = grep -Ii
    #grep from root folder
  gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

    #grep on filename
  f = "!git ls-files | grep -i"

    #rename branch tree to done-
  done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

    #assume aliases
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
    #show assumed files
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    #unassume all the assumed files
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
  nth = "!f() { git branch --sort=-committerdate | head -n $1 | tail -1  | xargs git checkout; }; f"

  lasttag = describe --tags --abbrev=0
  lt = describe --tags --abbrev=0

    #merges
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit

    #from Haacked
  ec = config --global -e
  up = !git pull --rebase --prune $@ && git submodule update --init --recursive
  save = !git add -A && git commit -m 'SAVEPOINT'
  wip = !git add -u && git commit -m "WIP"
  undo = reset HEAD~1 --mixed
  amend = commit -a --amend
  wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
  bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
  pr = !open `git config remote.origin.url`/compare/$(git rev-parse --abbrev-ref HEAD)
[push]
  default = tracking
[pull]
  default = current
[diff]
  memonicprefix = true
  algorithm = patience
[branch]
  autosetuprebase = always
[apply]
  whitespace = nowarn

[merge]
  tool = vimdiff
[core]
  editor = "vim -u NONE"
[credential]
	helper = cache --timeout 3600000
[filter "media"]
  clean = git-media-clean %f
  smudge = git-media-smudge %f
[gui]
  fontui = -family \"DejaVu Sans\" -size 9 -weight normal -slant roman -underline 0 -overstrike 0
  fontdiff = -family \"DejaVu Sans Mono\" -size 9 -weight normal -slant roman -underline 0 -overstrike 0
[filter "hawser"]
  clean = git hawser clean %f
  smudge = git hawser smudge %f
  required = true
[filter "lfs"]
  clean = git lfs clean %f
  smudge = git lfs smudge %f
  required = true
